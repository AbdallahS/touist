#
# MaÃ«l Valais <mael.valais@gmail.com>
#
# This AppVeyor configuration file has been writen to automate
# the building process and make deploying the application easy
# for the platform Windows.
#
# Like with the .travis.yml, this file will be executed
# by the appveyor servers and will build the project.
#
# 1. Why do I download this wodi32.zip instead of installing
#    ocaml-for-windows?
#    Actually it's because I couldn't make work the installer given on
#    protz.github.io/ocaml-installer/. The 64-bits version of the installer
#    doesn't seem to work properly and most importantly it pops up a window
#    that asks something to the user... which is impossible to deal in a CI env.
# 2. What is wodi32.zip and what does it contain?
#    It is a snapshot of the folder when I had wodi installed. Wodi has been
#    discontinued, this is why I had to make a "frozen in time" version.
#    It contains ocaml 4.02.1, fileutils, menhir and oasis.
#

# Operating system (build VM template)
os: Windows Server 2012
platform: x86

# scripts that are called at very beginning, before repo cloning
init: git config --global core.autocrlf input

# clone directory
clone_folder: c:\touist

environment:
  #JAVA_HOME: "C:\\Program Files (x86)\\Java\\jdk1.7.0"
  ANT_HOME: C:\ant

# build cache to preserve files/folders between builds
# WARNING: the wodi32 folder, when unziped, weights 809 MB.
# The limit for caching is 100 MB. So this thing won't help.
cache:
  - C:\wodi32
  - C:\ant

# scripts that run after cloning repository
install:
  - ps: mkdir c:\download
    # This step is a workaround based on a snapshot of wodi (ocaml+cygwin). Because installing ocaml+opam
    # seems (for now) impossible, I chose to upload this wodi32.zip on my dropbox ; it contains everything
    # needed for touist-translator.
  - ps: If(-Not(Test-Path c:\wodi32)){ Invoke-WebRequest https://dl.dropboxusercontent.com/u/41771140/wodi32.zip -OutFile c:\download\wodi32.zip }
  - ps: If(-Not(Test-Path c:\wodi32)){ 7z x c:\download\wodi32.zip -oc:\ | Out-Null }
  - ps: If(-Not(Test-Path c:\ant)){Invoke-WebRequest "http://www.us.apache.org/dist/ant/binaries/apache-ant-1.9.6-bin.zip" -OutFile c:\download\ant.zip}
  - ps: If(-Not(Test-Path c:\ant)){ 7z x c:\download\ant.zip -oc:\ | Out-Null; mv c:\apache-ant* c:\ant }
  - ps: ls c:\
  - ps: $env:Path = $env:Path + ";C:\ant\bin"
  - ps: echo $env:Path 

# to run your custom scripts instead of automatic MSBuild
build_script:
  - ps: cd c:\wodi32\bin
  # NOTE: I had to add the 2>&1 because when something writes to stderr, Powershell thinks there was an error... 
  - ps: .\bash.exe --login -i -c 'cd /cygdrive/c/touist/touist-translator && ./configure --bindir ../touist-gui/external 2>&1'
  - ps: .\bash.exe --login -i -c 'cd /cygdrive/c/touist/touist-translator && make 2>&1'
  - ps: .\bash.exe --login -i -c 'cd /cygdrive/c/touist/touist-translator && make install 2>&1'
  - ps: cd c:\touist\touist-gui
  - ps: ant zip
  - ps: $env:zip=$(Get-ChildItem -name -include touist*.zip)
  - ps: $env:tag=$(git describe --tags --abbrev=0)
  - ps: echo $env:zip $env:tag

test: off

artifacts:
  - path: touist-gui\touist-*.zip

skip_tags: false
deploy:
    # Deploy to GitHub Releases
  - provider: GitHub
    auth_token:
      secure: "HxU0eV4dnrn1w5WzCZ5LSE18RPYMSkpiWdZNmj6LrIpbVH5wn3tC0wOYDYqwLLxYZA09Qg6X/NVx4gr4nQAvfoxdYubV95hPWCcGsZmh3NpP9e/IAdwx+NAsoz8GEZqm3UzlaZL8JVPN5gGkAYbZNVpoudjf7b2EoXP4IUIIkRE="
    artifact: /touist-.*\.zip/          # upload all touist*.zip to release 
    #draft: true
    #prerelease: true
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only

